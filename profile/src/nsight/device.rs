use super::metrics::Float;
use crate::Metric;

#[derive(Clone, Debug, Default, PartialEq, serde::Serialize, serde::Deserialize)]
pub struct Device {
    #[serde(rename = "device__attribute_architecture")]
    pub attribute_architecture: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_async_engine_count")]
    pub attribute_async_engine_count: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_can_flush_remote_writes")]
    pub attribute_can_flush_remote_writes: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_can_map_host_memory")]
    pub attribute_can_map_host_memory: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_can_tex2d_gather")]
    pub attribute_can_tex2d_gather: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_can_use_64_bit_stream_mem_ops")]
    pub attribute_can_use_64_bit_stream_mem_ops: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_can_use_host_pointer_for_registered_mem")]
    pub attribute_can_use_host_pointer_for_registered_mem: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_can_use_stream_mem_ops")]
    pub attribute_can_use_stream_mem_ops: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_can_use_stream_wait_value_nor")]
    pub attribute_can_use_stream_wait_value_nor: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_chip")]
    pub attribute_chip: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_clock_rate")]
    pub attribute_clock_rate: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_compute_capability_major")]
    pub attribute_compute_capability_major: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_compute_capability_minor")]
    pub attribute_compute_capability_minor: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_compute_mode")]
    pub attribute_compute_mode: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_compute_preemption_supported")]
    pub attribute_compute_preemption_supported: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_concurrent_kernels")]
    pub attribute_concurrent_kernels: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_concurrent_managed_access")]
    pub attribute_concurrent_managed_access: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_cooperative_launch")]
    pub attribute_cooperative_launch: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_cooperative_multi_device_launch")]
    pub attribute_cooperative_multi_device_launch: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_device_index")]
    pub attribute_device_index: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_direct_managed_mem_access_from_host")]
    pub attribute_direct_managed_mem_access_from_host: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_display_name")]
    pub attribute_display_name: Option<Metric<String>>,
    #[serde(rename = "device__attribute_ecc_enabled")]
    pub attribute_ecc_enabled: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_fb_bus_width")]
    pub attribute_fb_bus_width: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_fbp_count")]
    pub attribute_fbp_count: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_global_l1_cache_supported")]
    pub attribute_global_l1_cache_supported: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_global_memory_bus_width")]
    pub attribute_global_memory_bus_width: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_gpu_overlap")]
    pub attribute_gpu_overlap: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_gpu_pci_device_id")]
    pub attribute_gpu_pci_device_id: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_gpu_pci_ext_device_id")]
    pub attribute_gpu_pci_ext_device_id: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_gpu_pci_ext_downstream_link_rate")]
    pub attribute_gpu_pci_ext_downstream_link_rate: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_gpu_pci_ext_downstream_link_width")]
    pub attribute_gpu_pci_ext_downstream_link_width: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_gpu_pci_ext_gen")]
    pub attribute_gpu_pci_ext_gen: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_gpu_pci_ext_gpu_gen")]
    pub attribute_gpu_pci_ext_gpu_gen: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_gpu_pci_ext_gpu_link_rate")]
    pub attribute_gpu_pci_ext_gpu_link_rate: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_gpu_pci_ext_gpu_link_width")]
    pub attribute_gpu_pci_ext_gpu_link_width: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_gpu_pci_revision_id")]
    pub attribute_gpu_pci_revision_id: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_gpu_pci_sub_system_id")]
    pub attribute_gpu_pci_sub_system_id: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_host_native_atomic_supported")]
    pub attribute_host_native_atomic_supported: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_host_register_supported")]
    pub attribute_host_register_supported: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_implementation")]
    pub attribute_implementation: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_integrated")]
    pub attribute_integrated: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_kernel_exec_timeout")]
    pub attribute_kernel_exec_timeout: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_l2_cache_size")]
    pub attribute_l2_cache_size: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_l2s_count")]
    pub attribute_l2s_count: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_limits_max_cta_per_sm")]
    pub attribute_limits_max_cta_per_sm: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_local_l1_cache_supported")]
    pub attribute_local_l1_cache_supported: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_managed_memory")]
    pub attribute_managed_memory: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_max_block_dim_x")]
    pub attribute_max_block_dim_x: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_max_block_dim_y")]
    pub attribute_max_block_dim_y: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_max_block_dim_z")]
    pub attribute_max_block_dim_z: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_max_gpu_frequency_khz")]
    pub attribute_max_gpu_frequency_khz: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_max_grid_dim_x")]
    pub attribute_max_grid_dim_x: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_max_grid_dim_y")]
    pub attribute_max_grid_dim_y: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_max_grid_dim_z")]
    pub attribute_max_grid_dim_z: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_max_ipc_per_multiprocessor")]
    pub attribute_max_ipc_per_multiprocessor: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_max_ipc_per_scheduler")]
    pub attribute_max_ipc_per_scheduler: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_max_mem_frequency_khz")]
    pub attribute_max_mem_frequency_khz: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_max_pitch")]
    pub attribute_max_pitch: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_max_registers_per_block")]
    pub attribute_max_registers_per_block: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_max_registers_per_multiprocessor")]
    pub attribute_max_registers_per_multiprocessor: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_max_registers_per_thread")]
    pub attribute_max_registers_per_thread: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_max_shared_memory_per_block")]
    pub attribute_max_shared_memory_per_block: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_max_shared_memory_per_block_optin")]
    pub attribute_max_shared_memory_per_block_optin: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_max_shared_memory_per_multiprocessor")]
    pub attribute_max_shared_memory_per_multiprocessor: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_max_threads_per_block")]
    pub attribute_max_threads_per_block: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_max_threads_per_multiprocessor")]
    pub attribute_max_threads_per_multiprocessor: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_max_warps_per_multiprocessor")]
    pub attribute_max_warps_per_multiprocessor: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_max_warps_per_scheduler")]
    pub attribute_max_warps_per_scheduler: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_surface1d_layered_layers")]
    pub attribute_maximum_surface1d_layered_layers: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_surface1d_layered_width")]
    pub attribute_maximum_surface1d_layered_width: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_surface1d_width")]
    pub attribute_maximum_surface1d_width: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_surface2d_height")]
    pub attribute_maximum_surface2d_height: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_surface2d_layered_height")]
    pub attribute_maximum_surface2d_layered_height: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_surface2d_layered_layers")]
    pub attribute_maximum_surface2d_layered_layers: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_surface2d_layered_width")]
    pub attribute_maximum_surface2d_layered_width: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_surface2d_width")]
    pub attribute_maximum_surface2d_width: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_surface3d_depth")]
    pub attribute_maximum_surface3d_depth: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_surface3d_height")]
    pub attribute_maximum_surface3d_height: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_surface3d_width")]
    pub attribute_maximum_surface3d_width: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_surfacecubemap_layered_layers")]
    pub attribute_maximum_surfacecubemap_layered_layers: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_surfacecubemap_layered_width")]
    pub attribute_maximum_surfacecubemap_layered_width: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_surfacecubemap_width")]
    pub attribute_maximum_surfacecubemap_width: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_texture1d_layered_layers")]
    pub attribute_maximum_texture1d_layered_layers: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_texture1d_layered_width")]
    pub attribute_maximum_texture1d_layered_width: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_texture1d_linear_width")]
    pub attribute_maximum_texture1d_linear_width: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_texture1d_mipmapped_width")]
    pub attribute_maximum_texture1d_mipmapped_width: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_texture1d_width")]
    pub attribute_maximum_texture1d_width: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_texture2d_gather_height")]
    pub attribute_maximum_texture2d_gather_height: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_texture2d_gather_width")]
    pub attribute_maximum_texture2d_gather_width: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_texture2d_height")]
    pub attribute_maximum_texture2d_height: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_texture2d_layered_height")]
    pub attribute_maximum_texture2d_layered_height: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_texture2d_layered_layers")]
    pub attribute_maximum_texture2d_layered_layers: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_texture2d_layered_width")]
    pub attribute_maximum_texture2d_layered_width: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_texture2d_linear_height")]
    pub attribute_maximum_texture2d_linear_height: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_texture2d_linear_pitch")]
    pub attribute_maximum_texture2d_linear_pitch: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_texture2d_linear_width")]
    pub attribute_maximum_texture2d_linear_width: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_texture2d_mipmapped_height")]
    pub attribute_maximum_texture2d_mipmapped_height: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_texture2d_mipmapped_width")]
    pub attribute_maximum_texture2d_mipmapped_width: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_texture2d_width")]
    pub attribute_maximum_texture2d_width: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_texture3d_depth")]
    pub attribute_maximum_texture3d_depth: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_texture3d_depth_alternate")]
    pub attribute_maximum_texture3d_depth_alternate: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_texture3d_height")]
    pub attribute_maximum_texture3d_height: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_texture3d_height_alternate")]
    pub attribute_maximum_texture3d_height_alternate: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_texture3d_width")]
    pub attribute_maximum_texture3d_width: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_texture3d_width_alternate")]
    pub attribute_maximum_texture3d_width_alternate: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_texturecubemap_layered_layers")]
    pub attribute_maximum_texturecubemap_layered_layers: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_texturecubemap_layered_width")]
    pub attribute_maximum_texturecubemap_layered_width: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_maximum_texturecubemap_width")]
    pub attribute_maximum_texturecubemap_width: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_memory_clock_rate")]
    pub attribute_memory_clock_rate: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_multi_gpu_board")]
    pub attribute_multi_gpu_board: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_multi_gpu_board_group_id")]
    pub attribute_multi_gpu_board_group_id: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_multiprocessor_count")]
    pub attribute_multiprocessor_count: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_num_l2s_per_fbp")]
    pub attribute_num_l2s_per_fbp: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_num_schedulers_per_multiprocessor")]
    pub attribute_num_schedulers_per_multiprocessor: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_num_tex_per_multiprocessor")]
    pub attribute_num_tex_per_multiprocessor: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_pageable_memory_access")]
    pub attribute_pageable_memory_access: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_pageable_memory_access_uses_host_page_tables")]
    pub attribute_pageable_memory_access_uses_host_page_tables: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_pci_bus_id")]
    pub attribute_pci_bus_id: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_pci_device_id")]
    pub attribute_pci_device_id: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_pci_domain_id")]
    pub attribute_pci_domain_id: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_ram_location")]
    pub attribute_ram_location: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_ram_type")]
    pub attribute_ram_type: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_sass_level")]
    pub attribute_sass_level: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_single_to_double_precision_perf_ratio")]
    pub attribute_single_to_double_precision_perf_ratio: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_stream_priorities_supported")]
    pub attribute_stream_priorities_supported: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_surface_alignment")]
    pub attribute_surface_alignment: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_tcc_driver")]
    pub attribute_tcc_driver: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_texture_alignment")]
    pub attribute_texture_alignment: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_texture_pitch_alignment")]
    pub attribute_texture_pitch_alignment: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_total_constant_memory")]
    pub attribute_total_constant_memory: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_total_memory")]
    pub attribute_total_memory: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_unified_addressing")]
    pub attribute_unified_addressing: Option<Metric<Float>>,
    #[serde(rename = "device__attribute_warp_size")]
    pub attribute_warp_size: Option<Metric<Float>>,
}
