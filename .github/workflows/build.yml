name: build

on: [push, pull_request]

jobs:
  feature-matrix:
    uses: ./.github/workflows/feature-matrix.yml

  build-accelsim:
    name: build accelsim (remote=${{ matrix.use_remote }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        use_remote: ["no", "yes"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install CUDA
        uses: Jimver/cuda-toolkit@v0.2.8
        id: cuda-toolkit
        with:
          cuda: '11.7.0'
          linux-local-args: '["--driver", "--toolkit"]'

      - name: Build
        env:
          USE_REMOTE_ACCELSIM: ${{ matrix.use_remote }}
        run: >-
          cargo build
          --package accelsim
          --all-targets

  build-main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build
        run: >-
          cargo build
          --package casimu
          --all-targets

  build:
    name: build ${{ matrix.package.name }} (${{ matrix.package.features }})
    runs-on: ubuntu-latest
    needs: [feature-matrix]
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.feature-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      
      - name: Install CUDA
        uses: Jimver/cuda-toolkit@v0.2.8
        id: cuda-toolkit
        with:
          cuda: '11.7.0'
          linux-local-args: '["--driver", "--toolkit"]'

      - name: Build all
        run: >-
          cargo build
          --package "${{ matrix.package.name }}"
          --features "${{ matrix.package.features }}"
          --all-targets
